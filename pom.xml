<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>kr.co.adonce.sbp</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>4.3.16.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>

		<org.springframework.security-version>4.2.12.RELEASE</org.springframework.security-version>
		<org.apache.logging.log4j-version>2.11.2</org.apache.logging.log4j-version>

		<open-commons-core.version>1.6.14</open-commons-core.version>
		<open-commons-json.version>1.6.4</open-commons-json.version>
		<open-commons-http.version>0.6.1</open-commons-http.version>

		<egovframework.rte.version>3.8.0</egovframework.rte.version>

		<postgresql.jdbc.version>42.1.4</postgresql.jdbc.version>
		<spring5-components.version>0.1.0</spring5-components.version>

		<build.finalName>sbp</build.finalName>
		<deploy.directory>deploy</deploy.directory>
	</properties>



	<!-- 스프링부트 -->
	<!-- <parent> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-parent</artifactId> 
		<version>3.1.1</version> <relativePath /> lookup parent from repository </parent> -->

	<!-- <groupId>adonce</groupId> <artifactId>sbp</artifactId> <description>Shinho 
		Bidding Project</description> -->


	<repositories>
		<repository>
			<id>mvn2</id>
			<url>http://repo1.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>egovframe</id>
			<url>http://www.egovframe.go.kr/maven/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- <repository> <id>egovframe2</id> <url>http://maven.egovframe.kr:8080/maven/</url> 
			<releases> <enabled>true</enabled> </releases> <snapshots> <enabled>false</enabled> 
			</snapshots> </repository> -->
		<repository>
			<id>YMTECH Maven Repository</id>
			<name>ymtech-maven-repo</name>
			<url>http://nexus3.ymtech.co.kr/repository/maven-public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


	<dependencies>
		<!-- <dependency> <groupId>kr.ymtech</groupId> <artifactId>spring5-components</artifactId> 
			<version>${spring5-components.version}</version> </dependency> -->


		<!-- Begin: GraphQL -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java</artifactId>
			<version>11.0</version>
		</dependency>
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-tools</artifactId>
			<version>5.2.4</version>
		</dependency>
		<!-- End: GraphQL -->
		<!-- 표준프레임워크 실행환경 -->
		<dependency>
			<groupId>egovframework.rte</groupId>
			<artifactId>egovframework.rte.ptl.mvc</artifactId>
			<version>${egovframework.rte.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>egovframework.rte</groupId>
			<artifactId>egovframework.rte.psl.dataaccess</artifactId>
			<version>${egovframework.rte.version}</version>
		</dependency>
		<dependency>
			<groupId>egovframework.rte</groupId>
			<artifactId>egovframework.rte.fdl.idgnr</artifactId>
			<version>${egovframework.rte.version}</version>
		</dependency>
		<dependency>
			<groupId>egovframework.rte</groupId>
			<artifactId>egovframework.rte.fdl.property</artifactId>
			<version>${egovframework.rte.version}</version>
		</dependency>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>

		<!-- begin: logging -->
		<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
		<!-- for llog4j-2.x: making all asynchronous loggers -->
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>3.3.6</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${org.apache.logging.log4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${org.apache.logging.log4j-version}</version>
		</dependency>
		<!-- for llog4j-2.x: making all asynchronous loggers -->
		<!-- https://mvnrepository.com/artifact/com.lmax/disruptor -->
		<!-- end: logging -->

		<!-- common-filedownload -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- common-filedownload -->
		<!-- commons-fileuploads -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- commons-fileuploads -->

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>

		<!-- begin: open-commons -->
		<dependency>
			<groupId>open.commons</groupId>
			<artifactId>open-commons-core</artifactId>
			<version>${open-commons-core.version}</version>
		</dependency>
		<dependency>
			<groupId>open.commons</groupId>
			<artifactId>open-commons-json</artifactId>
			<version>${open-commons-json.version}</version>
		</dependency>
		<dependency>
			<groupId>open.commons</groupId>
			<artifactId>open-commons-http</artifactId>
			<version>${open-commons-http.version}</version>
			<!-- <exclusions> -->
			<!-- Exclude Commons Logging in favor of SLF4j -->
			<!-- <exclusion> -->
			<!-- <groupId>log4j</groupId> -->
			<!-- <artifactId>log4j</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
		</dependency>
		<!-- <dependency> <groupId>open.commons</groupId> <artifactId>open-commons-spring-jdbc</artifactId> 
			<version>${open-commons-spring-jdbc.version}</version> </dependency> -->
		<!-- end: open-commons -->

		<!-- begin: JDBC Connector -->
		<!-- *********************** -->
		<!-- *********************** -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.jdbc.version}</version>
		</dependency>
		<!-- end: JDBC Connector -->
		<!-- *********************** -->
		<!-- *********************** -->

		<!-- jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.8.8</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.8.8</version>
		</dependency>

		<!-- begin: Test -->
		<!-- JUnit Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.2.3.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<!-- end: Test -->
	</dependencies>
	<!-- 기존 dependencies -->
	<!-- <dependencies> <dependency> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-starter-web</artifactId> </dependency> <dependency> 
		<groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId> 
		<scope>test</scope> </dependency> </dependencies> -->

	<build>
		<finalName>${build.finalName}</finalName>
		<defaultGoal>install</defaultGoal>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>

		<plugins>

			<!-- begin: make 'clean external directories' -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>deploy</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!-- end: make 'clean external directories' -->

			<!-- begin: compile & attach sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- end: compile & attach sources -->

			<!-- begin: make executable jar without dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>${manifest.mainClass}</mainClass>
						</manifest>
					</archive>
					<outputDirectory>${project.build.directory}/${build.finalName}</outputDirectory>
				</configuration>
				<executions>
					<execution>
					</execution>
				</executions>
			</plugin>
			<!-- end: make executable jar without dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<warName>sample</warName>

					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- begin: copy external resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
			</plugin>
			<!-- end: copy external resources -->

			<!-- begin: make libraries -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- configure the plugin here -->
							<outputDirectory>${project.build.directory}/${build.finalName}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- end: make libraries -->

			<!-- begin: make 'deploy' -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<descriptors>
						<descriptor>assembly/assembly-desc-deploy.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>createArchive</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${build.finalName}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<outputDirectory>${project.basedir}/${deploy.directory}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copyShell</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<formats>
								<format>dir</format>
							</formats>
							<finalName>deploy</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>assembly/assembly-copy-workdir.xml</descriptor>
							</descriptors>
							<outputDirectory>${project.basedir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- end: make 'deploy' -->

			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>org.test.int1.Main</mainClass>
				</configuration>
			</plugin>

		</plugins>
	</build>
	<!-- 기존 build -->
	<!-- <build> <plugins> <plugin> <groupId>org.springframework.boot</groupId> 
		<artifactId>spring-boot-maven-plugin</artifactId> </plugin> </plugins> </build> -->
	<groupId>kr.co.adonce</groupId>
	<artifactId>sbp</artifactId>

</project>
